{# Date #}
{% macro date(action, data) %}
	{% import _self as m %}
	{% for date in data.response.solr_doc.dc_date %}
		{{m.facetBuilder(action, "dc_date", date, "")}}
	{% endfor %}
{% endmacro %}

{# Subjects #}
{% macro subjects(action, data) %}
	{% import _self as m %}
	{% if data.response.solr_doc.dc_subject > 1 %}
		{% for subject in data.response.solr_doc.dc_subject %}
			{{m.facetBuilder(action, "dc_subject", subject, "")}}
		{% endfor %}
	{% else %}
		{{m.facetBuilder(action, "dc_subject", data.response.solr_doc.dc_subject, "")}}
	{% endif %}
{% endmacro %}

{# Content type #}
{% macro contentType(action, data) %}
	{% import _self as m %}
	{% if data.response.content_type > 1 %}
		{% for ct in data.response.content_type %}
			{{m.facetBuilder(action, "human_hasContentModel", ct, "")}}
		{% endfor %}
	{% else %}
		{{m.facetBuilder(action, "human_hasContentModel", data.response.content_type, "")}}
	{% endif %}
{% endmacro %}

{# Facet Builder #}
{% macro facetBuilder(action, facet, facet_value, facet_count, show_count, query_string) %}
	{% if action == "add" %}
		<a href="{{path_for('search') ~ "?" ~ add_param_to_query_string(QueryBuilder, facet ~ ":" ~ facet_value, query_string)}}">{{facet_value}}{% if show_count %} ({{facet_count}}){% endif %}</a>
	{% elseif action == "del" %}
		<a href="{{path_for('search') ~ "?" ~ del_param_from_query_string(QueryBuilder, facet ~ ":" ~ facet_value, query_string)}}">{{facet_value}}{% if show_count %} ({{facet_count}}){% endif %}</a>
	{% endif %}
{% endmacro %}

{# Facet Link Builder #}
{% macro facetLinkBuilder(action, facet, facet_value, query_string) %}
	{% if action == "add" %}
		{{path_for('search') ~ "?" ~ add_param_to_query_string(QueryBuilder, facet ~ ":" ~ facet_value, query_string)}}
	{% elseif action == "del" %}
		{{path_for('search') ~ "?" ~ del_param_from_query_string(QueryBuilder, facet ~ ":" ~ facet_value, query_string)}}
	{% endif %}
{% endmacro %}

{# Secondary Images -- if any #}
{% macro secondaryImages(data) %}
	{% for img in data.response.content_type_specific[0].imageParts.sorted %}
		<img src="/loris/fedora:{{data.response.pid}}%7C{{img.preview}}/full/63,/0/default.jpg">
	{% endfor %}
{% endmacro %}

{# metadata fields #}
{% macro metadataField(field_name, values, facet_name, create_facet_link) %}
	{% import _self as m %}
	{% if values > 1 or values != none %}
		<div>
			<div class="label">{{field_name}}</div>
			{% if values > 1 %}
				{% for value in values %}
					<div>{% if create_facet_link %}{{ m.facetBuilder('add', facet_name, value, false, false, '') }}{% else %}{{value|raw}}{% endif %}</div>
				{% endfor %}
			{% else %}
				<div>{% if create_facet_link %}{{ m.facetBuilder('add', facet_name, values, false, false, '') }}{% else %}{{values|raw}}{% endif %}</div>
			{% endif %}
		</div>
	{% endif %}
{% endmacro %}

{# create link for single item #}
{% macro singleItem(pid) %}
	{{ path_for('item') ~ "/" ~ pid }}
{% endmacro %}

{# recursive hierarchy #}
{% macro objectHierarchy(object_hierarchy, i) %}

	{# self, siblings, and children macro #}
	{% macro self_siblings_children(object_hierarchy) %}
		<ul>
    		<li class="self"><a href="/item/{{object_hierarchy.self.pid}}"><span class="hierarchy_self">{{ object_hierarchy.self.title }}</span></a>
    			{% if object_hierarchy.children|length > 0 %}
    				<ul>
    					{% for child in object_hierarchy.children %}
    						<li><a href="/item/{{child.pid}}">{{ child.title}}</a></li>
						{% endfor %}
					</ul>
				{% endif %}
    		</li>
    		{% for sibling in object_hierarchy.siblings %}
    			<li><a href="/item/{{sibling.pid}}">{{ sibling.title}}</a></li>
			{% endfor %}
		</ul>
	{% endmacro %}

	{% import _self as self %}

	{# set ancestors if exist #}
	{% if object_hierarchy.ancestors|length > 0 %}
		{% set ancestor = object_hierarchy.ancestors[i] %}
	    <li>
	        <a href="/item/{{ancestor.pid}}">{{ ancestor.title }}</a>
	        {% if ancestor.level > 1 %}
	            <ul>			            	
	                {{ self.objectHierarchy(object_hierarchy, i + 1) }}
	            </ul>
	        {% else %}
	        	{# write self, siblings, and children #}
	        	{{ self.self_siblings_children(object_hierarchy) }}
	        {% endif %}
	    </li>
    {% else %}
    	{{ self.self_siblings_children(object_hierarchy) }}
	{% endif %}

    <script>
		// make the appropriate lists collapsible
		CollapsibleLists.apply();
	</script>

{% endmacro %}

{# Downloads #}

{# Social Media #}

{# MLA Citation #}

{# APA Citation #}